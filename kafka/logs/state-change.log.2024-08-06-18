[2024-08-06 18:54:18,355] INFO [Broker id=1] Transitioning 53 partition(s) to local followers. (state.change.logger)
[2024-08-06 18:54:18,796] ERROR [Broker id=1] Unable to start fetching default_ksql_processing_log-0 with topic ID JMo_UmNfRh22lPRPfQuO_g due to IOException (state.change.logger)
java.io.IOException: Map failed
	at sun.nio.ch.FileChannelImpl.map(Unknown Source)
	at org.apache.kafka.storage.internals.log.AbstractIndex.createMappedBuffer(AbstractIndex.java:467)
	at org.apache.kafka.storage.internals.log.AbstractIndex.createAndAssignMmap(AbstractIndex.java:105)
	at org.apache.kafka.storage.internals.log.AbstractIndex.<init>(AbstractIndex.java:83)
	at org.apache.kafka.storage.internals.log.OffsetIndex.<init>(OffsetIndex.java:70)
	at org.apache.kafka.storage.internals.log.LazyIndex.loadIndex(LazyIndex.java:240)
	at org.apache.kafka.storage.internals.log.LazyIndex.get(LazyIndex.java:179)
	at org.apache.kafka.storage.internals.log.LogSegment.offsetIndex(LogSegment.java:138)
	at org.apache.kafka.storage.internals.log.LogSegment.readNextOffset(LogSegment.java:611)
	at kafka.log.LogLoader.deleteSegmentsIfLogStartGreaterThanLogEnd$1(LogLoader.scala:394)
	at kafka.log.LogLoader.recoverLog(LogLoader.scala:450)
	at kafka.log.LogLoader.$anonfun$load$11(LogLoader.scala:155)
	at kafka.log.LogLoader.load(LogLoader.scala:272)
	at kafka.log.UnifiedLog$.apply(UnifiedLog.scala:2005)
	at kafka.log.LogManager.$anonfun$getOrCreateLog$1(LogManager.scala:1066)
	at scala.Option.getOrElse(Option.scala:189)
	at kafka.log.LogManager.getOrCreateLog(LogManager.scala:1023)
	at kafka.cluster.Partition.createLog(Partition.scala:480)
	at kafka.cluster.Partition.maybeCreate$1(Partition.scala:454)
	at kafka.cluster.Partition.createLogIfNotExists(Partition.scala:461)
	at kafka.cluster.Partition.createLogInAssignedDirectoryId(Partition.scala:886)
	at kafka.cluster.Partition.$anonfun$makeFollower$1(Partition.scala:848)
	at kafka.cluster.Partition.makeFollower(Partition.scala:819)
	at kafka.server.ReplicaManager.$anonfun$applyLocalFollowersDelta$3(ReplicaManager.scala:2939)
	at scala.Option.foreach(Option.scala:407)
	at kafka.server.ReplicaManager.$anonfun$applyLocalFollowersDelta$2(ReplicaManager.scala:2928)
	at kafka.server.ReplicaManager.$anonfun$applyLocalFollowersDelta$2$adapted(ReplicaManager.scala:2927)
	at kafka.utils.Implicits$MapExtensionMethods$.$anonfun$forKeyValue$1(Implicits.scala:62)
	at scala.collection.compat.MapExtensionMethods$.$anonfun$foreachEntry$1(PackageShared.scala:589)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at scala.collection.compat.MapExtensionMethods$.foreachEntry$extension(PackageShared.scala:589)
	at kafka.server.ReplicaManager.applyLocalFollowersDelta(ReplicaManager.scala:2927)
	at kafka.server.ReplicaManager.applyDelta(ReplicaManager.scala:2862)
	at kafka.server.metadata.BrokerMetadataPublisher.$anonfun$onMetadataUpdate$8(BrokerMetadataPublisher.scala:151)
	at scala.Option.foreach(Option.scala:407)
	at kafka.server.metadata.BrokerMetadataPublisher.onMetadataUpdate(BrokerMetadataPublisher.scala:148)
	at org.apache.kafka.image.loader.MetadataLoader.maybePublishMetadata(MetadataLoader.java:341)
	at org.apache.kafka.image.loader.MetadataBatchLoader.applyDeltaAndUpdate(MetadataBatchLoader.java:272)
	at org.apache.kafka.image.loader.MetadataBatchLoader.maybeFlushBatches(MetadataBatchLoader.java:208)
	at org.apache.kafka.image.loader.MetadataLoader.lambda$handleCommit$1(MetadataLoader.java:365)
	at org.apache.kafka.queue.KafkaEventQueue$EventContext.run(KafkaEventQueue.java:127)
	at org.apache.kafka.queue.KafkaEventQueue$EventHandler.handleEvents(KafkaEventQueue.java:210)
	at org.apache.kafka.queue.KafkaEventQueue$EventHandler.run(KafkaEventQueue.java:181)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.OutOfMemoryError: Map failed
	at sun.nio.ch.FileChannelImpl.map0(Native Method)
	... 49 more
[2024-08-06 18:54:18,796] INFO [Broker id=1] Follower __consumer_offsets-13 starts at leader epoch 3 from offset 0 with partition epoch 3 and high watermark 0. Current leader is -1. Previous leader Some(-1) and previous leader epoch was 3. (state.change.logger)
[2024-08-06 18:54:18,796] INFO [Broker id=1] Follower __consumer_offsets-46 starts at leader epoch 3 from offset 0 with partition epoch 3 and high watermark 0. Current leader is -1. Previous leader Some(-1) and previous leader epoch was 3. (state.change.logger)
[2024-08-06 18:54:18,796] INFO [Broker id=1] Follower __consumer_offsets-9 starts at leader epoch 3 from offset 0 with partition epoch 3 and high watermark 0. Current leader is -1. Previous leader Some(-1) and previous leader epoch was 3. (state.change.logger)
[2024-08-06 18:54:18,796] INFO [Broker id=1] Follower __consumer_offsets-42 starts at leader epoch 3 from offset 0 with partition epoch 3 and high watermark 0. Current leader is -1. Previous leader Some(-1) and previous leader epoch was 3. (state.change.logger)
[2024-08-06 18:54:18,796] INFO [Broker id=1] Follower __consumer_offsets-21 starts at leader epoch 3 from offset 0 with partition epoch 3 and high watermark 0. Current leader is -1. Previous leader Some(-1) and previous leader epoch was 3. (state.change.logger)
[2024-08-06 18:54:18,796] INFO [Broker id=1] Follower __consumer_offsets-17 starts at leader epoch 3 from offset 0 with partition epoch 3 and high watermark 0. Current leader is -1. Previous leader Some(-1) and previous leader epoch was 3. (state.change.logger)
[2024-08-06 18:54:18,796] INFO [Broker id=1] Follower __consumer_offsets-30 starts at leader epoch 3 from offset 0 with partition epoch 3 and high watermark 0. Current leader is -1. Previous leader Some(-1) and previous leader epoch was 3. (state.change.logger)
[2024-08-06 18:54:18,796] INFO [Broker id=1] Follower __consumer_offsets-26 starts at leader epoch 3 from offset 0 with partition epoch 3 and high watermark 0. Current leader is -1. Previous leader Some(-1) and previous leader epoch was 3. (state.change.logger)
[2024-08-06 18:54:18,796] INFO [Broker id=1] Follower __consumer_offsets-5 starts at leader epoch 3 from offset 0 with partition epoch 3 and high watermark 0. Current leader is -1. Previous leader Some(-1) and previous leader epoch was 3. (state.change.logger)
[2024-08-06 18:54:18,796] INFO [Broker id=1] Follower __consumer_offsets-38 starts at leader epoch 3 from offset 0 with partition epoch 3 and high watermark 0. Current leader is -1. Previous leader Some(-1) and previous leader epoch was 3. (state.change.logger)
[2024-08-06 18:54:18,796] INFO [Broker id=1] Follower __consumer_offsets-1 starts at leader epoch 3 from offset 0 with partition epoch 3 and high watermark 0. Current leader is -1. Previous leader Some(-1) and previous leader epoch was 3. (state.change.logger)
[2024-08-06 18:54:18,796] INFO [Broker id=1] Follower __consumer_offsets-34 starts at leader epoch 3 from offset 0 with partition epoch 3 and high watermark 0. Current leader is -1. Previous leader Some(-1) and previous leader epoch was 3. (state.change.logger)
[2024-08-06 18:54:18,969] ERROR [Broker id=1] Unable to start fetching _schemas-0 with topic ID ei3-DQTTR-6wCrAWPDpDzA due to IOException (state.change.logger)
java.io.IOException: Map failed
	at sun.nio.ch.FileChannelImpl.map(Unknown Source)
	at org.apache.kafka.storage.internals.log.AbstractIndex.createMappedBuffer(AbstractIndex.java:467)
	at org.apache.kafka.storage.internals.log.AbstractIndex.createAndAssignMmap(AbstractIndex.java:105)
	at org.apache.kafka.storage.internals.log.AbstractIndex.<init>(AbstractIndex.java:83)
	at org.apache.kafka.storage.internals.log.TimeIndex.<init>(TimeIndex.java:65)
	at org.apache.kafka.storage.internals.log.LazyIndex.loadIndex(LazyIndex.java:242)
	at org.apache.kafka.storage.internals.log.LazyIndex.get(LazyIndex.java:179)
	at org.apache.kafka.storage.internals.log.LogSegment.timeIndex(LogSegment.java:146)
	at org.apache.kafka.storage.internals.log.LogSegment.sanityCheck(LogSegment.java:186)
	at kafka.log.LogLoader.$anonfun$loadSegmentFiles$3(LogLoader.scala:327)
	at scala.collection.TraversableLike$WithFilter.$anonfun$foreach$1(TraversableLike.scala:985)
	at scala.collection.IndexedSeqOptimized.foreach(IndexedSeqOptimized.scala:36)
	at scala.collection.IndexedSeqOptimized.foreach$(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:198)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:984)
	at kafka.log.LogLoader.loadSegmentFiles(LogLoader.scala:304)
	at kafka.log.LogLoader.$anonfun$load$10(LogLoader.scala:150)
	at kafka.log.LogLoader.load(LogLoader.scala:272)
	at kafka.log.UnifiedLog$.apply(UnifiedLog.scala:2005)
	at kafka.log.LogManager.$anonfun$getOrCreateLog$1(LogManager.scala:1066)
	at scala.Option.getOrElse(Option.scala:189)
	at kafka.log.LogManager.getOrCreateLog(LogManager.scala:1023)
	at kafka.cluster.Partition.createLog(Partition.scala:480)
	at kafka.cluster.Partition.maybeCreate$1(Partition.scala:454)
	at kafka.cluster.Partition.createLogIfNotExists(Partition.scala:461)
	at kafka.cluster.Partition.createLogInAssignedDirectoryId(Partition.scala:886)
	at kafka.cluster.Partition.$anonfun$makeFollower$1(Partition.scala:848)
	at kafka.cluster.Partition.makeFollower(Partition.scala:819)
	at kafka.server.ReplicaManager.$anonfun$applyLocalFollowersDelta$3(ReplicaManager.scala:2939)
	at scala.Option.foreach(Option.scala:407)
	at kafka.server.ReplicaManager.$anonfun$applyLocalFollowersDelta$2(ReplicaManager.scala:2928)
	at kafka.server.ReplicaManager.$anonfun$applyLocalFollowersDelta$2$adapted(ReplicaManager.scala:2927)
	at kafka.utils.Implicits$MapExtensionMethods$.$anonfun$forKeyValue$1(Implicits.scala:62)
	at scala.collection.compat.MapExtensionMethods$.$anonfun$foreachEntry$1(PackageShared.scala:589)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at scala.collection.compat.MapExtensionMethods$.foreachEntry$extension(PackageShared.scala:589)
	at kafka.server.ReplicaManager.applyLocalFollowersDelta(ReplicaManager.scala:2927)
	at kafka.server.ReplicaManager.applyDelta(ReplicaManager.scala:2862)
	at kafka.server.metadata.BrokerMetadataPublisher.$anonfun$onMetadataUpdate$8(BrokerMetadataPublisher.scala:151)
	at scala.Option.foreach(Option.scala:407)
	at kafka.server.metadata.BrokerMetadataPublisher.onMetadataUpdate(BrokerMetadataPublisher.scala:148)
	at org.apache.kafka.image.loader.MetadataLoader.maybePublishMetadata(MetadataLoader.java:341)
	at org.apache.kafka.image.loader.MetadataBatchLoader.applyDeltaAndUpdate(MetadataBatchLoader.java:272)
	at org.apache.kafka.image.loader.MetadataBatchLoader.maybeFlushBatches(MetadataBatchLoader.java:208)
	at org.apache.kafka.image.loader.MetadataLoader.lambda$handleCommit$1(MetadataLoader.java:365)
	at org.apache.kafka.queue.KafkaEventQueue$EventContext.run(KafkaEventQueue.java:127)
	at org.apache.kafka.queue.KafkaEventQueue$EventHandler.handleEvents(KafkaEventQueue.java:210)
	at org.apache.kafka.queue.KafkaEventQueue$EventHandler.run(KafkaEventQueue.java:181)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.OutOfMemoryError: Map failed
	at sun.nio.ch.FileChannelImpl.map0(Native Method)
	... 54 more
[2024-08-06 18:54:18,970] INFO [Broker id=1] Follower __consumer_offsets-16 starts at leader epoch 3 from offset 0 with partition epoch 3 and high watermark 0. Current leader is -1. Previous leader Some(-1) and previous leader epoch was 3. (state.change.logger)
[2024-08-06 18:54:18,970] INFO [Broker id=1] Follower __consumer_offsets-45 starts at leader epoch 3 from offset 0 with partition epoch 3 and high watermark 0. Current leader is -1. Previous leader Some(-1) and previous leader epoch was 3. (state.change.logger)
[2024-08-06 18:54:18,970] INFO [Broker id=1] Follower __consumer_offsets-12 starts at leader epoch 3 from offset 0 with partition epoch 3 and high watermark 0. Current leader is -1. Previous leader Some(-1) and previous leader epoch was 3. (state.change.logger)
[2024-08-06 18:54:18,970] INFO [Broker id=1] Follower __consumer_offsets-41 starts at leader epoch 3 from offset 0 with partition epoch 3 and high watermark 0. Current leader is -1. Previous leader Some(-1) and previous leader epoch was 3. (state.change.logger)
[2024-08-06 18:54:18,970] INFO [Broker id=1] Follower __consumer_offsets-24 starts at leader epoch 3 from offset 0 with partition epoch 3 and high watermark 0. Current leader is -1. Previous leader Some(-1) and previous leader epoch was 3. (state.change.logger)
[2024-08-06 18:54:18,970] INFO [Broker id=1] Follower __consumer_offsets-20 starts at leader epoch 3 from offset 0 with partition epoch 3 and high watermark 0. Current leader is -1. Previous leader Some(-1) and previous leader epoch was 3. (state.change.logger)
[2024-08-06 18:54:18,970] INFO [Broker id=1] Follower __consumer_offsets-49 starts at leader epoch 3 from offset 0 with partition epoch 3 and high watermark 0. Current leader is -1. Previous leader Some(-1) and previous leader epoch was 3. (state.change.logger)
[2024-08-06 18:54:18,970] INFO [Broker id=1] Follower __consumer_offsets-0 starts at leader epoch 3 from offset 0 with partition epoch 3 and high watermark 0. Current leader is -1. Previous leader Some(-1) and previous leader epoch was 3. (state.change.logger)
[2024-08-06 18:54:18,970] INFO [Broker id=1] Follower __consumer_offsets-29 starts at leader epoch 3 from offset 4 with partition epoch 3 and high watermark 4. Current leader is -1. Previous leader Some(-1) and previous leader epoch was 3. (state.change.logger)
[2024-08-06 18:54:18,970] INFO [Broker id=1] Follower __consumer_offsets-25 starts at leader epoch 3 from offset 0 with partition epoch 3 and high watermark 0. Current leader is -1. Previous leader Some(-1) and previous leader epoch was 3. (state.change.logger)
[2024-08-06 18:54:18,970] INFO [Broker id=1] Follower __consumer_offsets-8 starts at leader epoch 3 from offset 0 with partition epoch 3 and high watermark 0. Current leader is -1. Previous leader Some(-1) and previous leader epoch was 3. (state.change.logger)
[2024-08-06 18:54:18,970] INFO [Broker id=1] Follower __consumer_offsets-37 starts at leader epoch 3 from offset 0 with partition epoch 3 and high watermark 0. Current leader is -1. Previous leader Some(-1) and previous leader epoch was 3. (state.change.logger)
[2024-08-06 18:54:18,970] INFO [Broker id=1] Follower __consumer_offsets-4 starts at leader epoch 3 from offset 0 with partition epoch 3 and high watermark 0. Current leader is -1. Previous leader Some(-1) and previous leader epoch was 3. (state.change.logger)
[2024-08-06 18:54:18,970] INFO [Broker id=1] Follower __consumer_offsets-33 starts at leader epoch 3 from offset 0 with partition epoch 3 and high watermark 0. Current leader is -1. Previous leader Some(-1) and previous leader epoch was 3. (state.change.logger)
[2024-08-06 18:54:18,970] INFO [Broker id=1] Follower __consumer_offsets-15 starts at leader epoch 3 from offset 0 with partition epoch 3 and high watermark 0. Current leader is -1. Previous leader Some(-1) and previous leader epoch was 3. (state.change.logger)
[2024-08-06 18:54:18,970] INFO [Broker id=1] Follower __consumer_offsets-48 starts at leader epoch 3 from offset 0 with partition epoch 3 and high watermark 0. Current leader is -1. Previous leader Some(-1) and previous leader epoch was 3. (state.change.logger)
[2024-08-06 18:54:18,970] INFO [Broker id=1] Follower __consumer_offsets-11 starts at leader epoch 3 from offset 0 with partition epoch 3 and high watermark 0. Current leader is -1. Previous leader Some(-1) and previous leader epoch was 3. (state.change.logger)
